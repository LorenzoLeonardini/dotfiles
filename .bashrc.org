#+TITLE: .bashrc configuration
#+AUTHOR: Lorenzo Leonardini
#+DATE: <2021-07-21 Wed>
#+PROPERTY: header-args :tangle ".bashrc" :comments noweb :noweb yes :results output
#+auto_tangle: g

* General settings
** Path
Exporting PATH values for Java, Go, Ruby, Deno, stuff. This probably needs to be improved because a lot of things are hardcoded (like the Java version or the username)

#+begin_src bash
export JAVA_HOME="/usr/lib/jvm/java-11-openjdk"

export DENO_INSTALL="/home/pianka/.deno"
export PATH="$DENO_INSTALL/bin:$PATH"

export GOPATH="/home/pianka/go"

export PATH="$PATH:$GOPATH/bin"
export PATH="$PATH:/home/pianka/.gem/ruby/2.6.0/bin"
export PATH="$PATH:/home/pianka/.gem/ruby/2.7.0/bin"
export PATH="$PATH:/home/pianka/.local/share/gem/ruby/2.7.0/bin"
export PATH="$PATH:/home/pianka/.local/share/gem/ruby/3.0.0/bin"
export PATH="$PATH:/home/pianka/.local/bin"
export PATH="$PATH:$JAVA_HOME"
export PATH="$HOME/.yarn/bin:$PATH"
#+end_src

** Editor

Set vi (vim) as primary editor, which is fun, cause I'm writing this on Emacs.

#+begin_src bash
set -o vi

export EDITOR="vim"
export VISUAL="vim"
#+end_src

** Random settings

I don't really know what /all/ of this does. I shamelessly copied it from somewhere, some extra things it does is to set pretty colors and stuff

Let's start with some commented code

#+begin_src bash
# ~/.bashrc: executed by bast(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
#define GIT_COLOR_NORMAL “”
#+end_src

If not running interactively, don't do anything

#+begin_src bash
[ -z "$PS1" ] && return
#+end_src

Don't put duplicate lines or lines starting with space in the history. See bash(1) for more options

#+begin_src bash
HISTCONTROL=ignoreboth
#+end_src

Append to the history file, don't overwrite it

#+begin_src bash
shopt -s histappend
#+end_src

For setting history length see HISTSIZE and HISTFILESIZE in bash(1)

#+begin_src bash
HISTSIZE=1000
HISTFILESIZE=2000
#+end_src

Check the window size after each command and, if necessary, update the values of LINES and COLUMNS.

#+begin_src bash
shopt -s checkwinsize
#+end_src

If set, the pattern "**" used in a pathname expansion context will match all files and zero or more directories and subdirectories.

#+begin_src bash
#shopt -s globstar
#+end_src

Make less more friendly for non-text input files, see lesspipe(1)

#+begin_src bash
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
#+end_src

Set variable identifying the chroot you work in (used in the prompt below)

#+begin_src bash
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi
#+end_src

Set a fancy prompt (non-color, unless we know we "want" color)

#+begin_src bash
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac
#+end_src

Colored prompt, if the terminal has the capability

#+begin_src bash
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
  # We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
#+end_src

Enable programmable completion features (you don't need to enable this, if it's already enabled in /etc/bash.bashrc and /etc/profile sources /etc/bash.bashrc).

#+begin_src bash
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi
#+end_src

I honestly don't know

#+begin_src bash
stty -ixon

if [ "$0" = "/usr/sbin/lightdm-session" -a "$DESKTOP_SESSION" = "i3" ]; then
	export $(gnome-keyring-daemon -s)
fi

export TERM=screen-256color

complete -cf sudo
#+end_src

** PS1

Setting up my nice prompt. The look is basically =($GIT_BRANCH) [$TIME][$USER@$HOST] $FOLDER $=, with nice colors

#+begin_src bash
if [ "$color_prompt" = yes ]; then
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    PS1='${debian_chroot:+($debian_chroot)}\[\033[0;37m\][\t][\[\033[00;34m\]\u\[\033[0;37m\]@\[\033[32m\]\h\[\033[0;37m\]]\[\033[0;31m\]`git branch 2>/dev/null | grep \* | head -1 | sed "s/\* //g" |     awk "{ print \"(\"\\\$1 \")\" }"` \[\033[1;33m\]\w \[\033[0;33m\]\$ \[\033[00m\]'

else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
	PS1='\[\033[0;37m\][\t][\[\033[00;34m\]\u\[\033[0;37m\]@\[\033[32m\]\h\[\033[0;37m\]]\[\033[0;31m\]`git branch 2>/dev/null | grep \* | head -1 | sed "s/\* //g" | awk "{ print \"(\"\\\$1 \")\" }"` \[\033[1;33m\]\w \[\033[0;33m\]\$ \[\033[00m\]'
	;;
*)
    ;;
esac
#+end_src

* Aliases

Set some useful aliases for =ls= and system info

#+begin_src bash
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias battery="acpi"
alias weather="curl wttr.in/genova"
alias gcs="google-chrome-stable"
#+end_src

** SSH connections

These aliases are used to make ssh-ing easier and faster

#+begin_src bash
alias pi='ssh 192.168.1.201'
#+end_src

#+RESULTS:

** Opening stuff

Handy aliases to open programs or stuff in bulk

#+begin_src bash
alias gcs="google-chrome-stable"
alias artists="gcs artists.spotify.com & gcs artists.apple.com & gcs artists.amazon.com"
alias artists="gcs artists.spotify.com & gcs artists.apple.com & gcs artists.amazon.com"
#+end_src

** Python virtual environments

#+begin_src bash
function venv {
    if [ -f ./venv/bin/activate ]; then
        . ./venv/bin/activate
    else
        virtualenv venv
        . ./venv/bin/activate
        if [ -f ./requirements.txt ]; then
            pip install -r requirements.txt
        fi
    fi
}
#+end_src

* Stuff I should be using but maybe it's too late

#+begin_src bash
# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

#+end_src


* NVM

Configuration for using nvm. Thanks to https://www.growingwiththeweb.com/2018/01/slow-nvm-init.html for a nice script to avoid startup slow downs

#+begin_src bash
if [ -s "${HOME}/.nvm/nvm.sh" ] && [ ! "$(type -t __init_nvm)" = function ]; then
    export NVM_DIR="${HOME}/.nvm"
    [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
    declare -a __node_commands=('nvm' 'node' 'npm' 'yarn' 'gulp' 'grunt' 'webpack')
    function __init_nvm() {
        for i in "${__node_commands[@]}"; do unalias $i; done
        . "$NVM_DIR"/nvm.sh
        unset __node_commands
        unset -f __init_nvm
    }
    for i in "${__node_commands[@]}"; do alias $i='__init_nvm && '$i; done
fi
#+end_src

* Ranger

#+begin_src bash
export RANGER_LOAD_DEFAULT_RC=FALSE
#+end_src

* Tmux

#+begin_src bash
if [ -x "$(command -v tmux)" ] && [ -n "${DISPLAY}" ] && [ -z "${TMUX}" ]; then
    exec tmux -u
fi
#+end_src
